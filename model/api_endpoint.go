package model

import (
	"errors"
	"fmt"
)

// APIEndpoint is a Kubernetes API endpoint to which various clients connect.
// Each endpoint can be served by an existing ELB or a kube-aws managed ELB.
type APIEndpoint struct {
	// Name is the unique name of this API endpoint used by kube-aws for identifying this API endpoint
	Name string `yaml:"name,omitempty"`
	// DNSName is the FQDN of this endpoint
	// A record set may or may not be created with this DNS name.
	// TLS certificates generated by kube-aws would contain this name in the list of common names.
	DNSName string `yaml:"dnsName,omitempty"`
	// LoadBalancer is a set of an ELB and relevant settings and resources to serve a Kubernetes API hosted by controller nodes
	LoadBalancer APIEndpointLB `yaml:"loadBalancer,omitempty"`
	//DNSRoundRobin APIDNSRoundRobin `yaml:"dnsRoundRobin,omitempty"`
}

// Validate returns an error when there's any user error in the `apiEndpoint` settings
func (e APIEndpoint) Validate() error {
	if err := e.LoadBalancer.Validate(); err != nil {
		return fmt.Errorf("invalid loadBalancer: %v", err)
	}
	if e.DNSName == "" {
		return errors.New("dnsName must be set")
	}
	return nil
}
